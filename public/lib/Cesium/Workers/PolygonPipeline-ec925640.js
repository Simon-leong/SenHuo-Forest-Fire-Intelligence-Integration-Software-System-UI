/**
 * @license
 * Cesium - https://github.com/CesiumGS/cesium
 * Version 1.96.6
 *
 * Copyright 2011-2022 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/CesiumGS/cesium/blob/main/LICENSE.md for full licensing details.
 */

define(["exports","./Matrix2-4706dd70","./RuntimeError-a977b8e0","./ComponentDatatype-438cad2a","./defaultValue-028a8a27","./EllipsoidRhumbLine-248c8a1e","./GeometryAttribute-2cdece80","./WebGLConstants-0ff1ce58"],function(xe,u,T,F,b,oe,E,ve){"use strict";var ye=ne,ke=ne;function ne(e,t,n){n=n||2;var c=t&&t.length,r=c?t[0]*n:e.length,i=pe(e,0,r,n,!0),s=[];if(!i||i.next===i.prev)return s;var o,l,a,x,p,C,h;if(c&&(i=De(e,t,i,n)),e.length>80*n){o=a=e[0],l=x=e[1];for(var f=n;f<r;f+=n)p=e[f],C=e[f+1],p<o&&(o=p),C<l&&(l=C),p>a&&(a=p),C>x&&(x=C);h=Math.max(a-o,x-l),h=h!==0?1/h:0}return J(i,s,n,o,l,h),s}function pe(e,t,n,c,r){var i,s;if(r===fe(e,t,n,c)>0)for(i=t;i<n;i+=c)s=ge(i,e[i],e[i+1],s);else for(i=n-c;i>=t;i-=c)s=ge(i,e[i],e[i+1],s);return s&&te(s,s.next)&&(j(s),s=s.next),s}function z(e,t){if(!e)return e;t||(t=e);var n=e,c;do if(c=!1,!n.steiner&&(te(n,n.next)||d(n.prev,n,n.next)===0)){if(j(n),n=t=n.prev,n===n.next)break;c=!0}else n=n.next;while(c||n!==t);return t}function J(e,t,n,c,r,i,s){if(!!e){!s&&i&&Ie(e,c,r,i);for(var o=e,l,a;e.prev!==e.next;){if(l=e.prev,a=e.next,i?Fe(e,c,r,i):Pe(e)){t.push(l.i/n),t.push(e.i/n),t.push(a.i/n),j(e),e=a.next,o=a.next;continue}if(e=a,e===o){s?s===1?(e=Ee(z(e),t,n),J(e,t,n,c,r,i,2)):s===2&&ze(e,t,n,c,r,i):J(z(e),t,n,c,r,i,1);break}}}}function Pe(e){var t=e.prev,n=e,c=e.next;if(d(t,n,c)>=0)return!1;for(var r=e.next.next;r!==e.prev;){if(H(t.x,t.y,n.x,n.y,c.x,c.y,r.x,r.y)&&d(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function Fe(e,t,n,c){var r=e.prev,i=e,s=e.next;if(d(r,i,s)>=0)return!1;for(var o=r.x<i.x?r.x<s.x?r.x:s.x:i.x<s.x?i.x:s.x,l=r.y<i.y?r.y<s.y?r.y:s.y:i.y<s.y?i.y:s.y,a=r.x>i.x?r.x>s.x?r.x:s.x:i.x>s.x?i.x:s.x,x=r.y>i.y?r.y>s.y?r.y:s.y:i.y>s.y?i.y:s.y,p=ue(o,l,t,n,c),C=ue(a,x,t,n,c),h=e.prevZ,f=e.nextZ;h&&h.z>=p&&f&&f.z<=C;){if(h!==e.prev&&h!==e.next&&H(r.x,r.y,i.x,i.y,s.x,s.y,h.x,h.y)&&d(h.prev,h,h.next)>=0||(h=h.prevZ,f!==e.prev&&f!==e.next&&H(r.x,r.y,i.x,i.y,s.x,s.y,f.x,f.y)&&d(f.prev,f,f.next)>=0))return!1;f=f.nextZ}for(;h&&h.z>=p;){if(h!==e.prev&&h!==e.next&&H(r.x,r.y,i.x,i.y,s.x,s.y,h.x,h.y)&&d(h.prev,h,h.next)>=0)return!1;h=h.prevZ}for(;f&&f.z<=C;){if(f!==e.prev&&f!==e.next&&H(r.x,r.y,i.x,i.y,s.x,s.y,f.x,f.y)&&d(f.prev,f,f.next)>=0)return!1;f=f.nextZ}return!0}function Ee(e,t,n){var c=e;do{var r=c.prev,i=c.next.next;!te(r,i)&&Ce(r,c,c.next,i)&&Q(r,i)&&Q(i,r)&&(t.push(r.i/n),t.push(c.i/n),t.push(i.i/n),j(c),j(c.next),c=e=i),c=c.next}while(c!==e);return z(c)}function ze(e,t,n,c,r,i){var s=e;do{for(var o=s.next.next;o!==s.prev;){if(s.i!==o.i&&Ue(s,o)){var l=de(s,o);s=z(s,s.next),l=z(l,l.next),J(s,t,n,c,r,i),J(l,t,n,c,r,i);return}o=o.next}s=s.next}while(s!==e)}function De(e,t,n,c){var r=[],i,s,o,l,a;for(i=0,s=t.length;i<s;i++)o=t[i]*c,l=i<s-1?t[i+1]*c:e.length,a=pe(e,o,l,c,!1),a===a.next&&(a.steiner=!0),r.push(_e(a));for(r.sort(Be),i=0;i<r.length;i++)n=We(r[i],n),n=z(n,n.next);return n}function Be(e,t){return e.x-t.x}function We(e,t){var n=$e(e,t);if(!n)return t;var c=de(n,e),r=z(n,n.next);return z(c,c.next),t===n?r:t}function $e(e,t){var n=t,c=e.x,r=e.y,i=-1/0,s;do{if(r<=n.y&&r>=n.next.y&&n.next.y!==n.y){var o=n.x+(r-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(o<=c&&o>i){if(i=o,o===c){if(r===n.y)return n;if(r===n.next.y)return n.next}s=n.x<n.next.x?n:n.next}}n=n.next}while(n!==t);if(!s)return null;if(c===i)return s;var l=s,a=s.x,x=s.y,p=1/0,C;n=s;do c>=n.x&&n.x>=a&&c!==n.x&&H(r<x?c:i,r,a,x,r<x?i:c,r,n.x,n.y)&&(C=Math.abs(r-n.y)/(c-n.x),Q(n,e)&&(C<p||C===p&&(n.x>s.x||n.x===s.x&&Ge(s,n)))&&(s=n,p=C)),n=n.next;while(n!==l);return s}function Ge(e,t){return d(e.prev,e,t.prev)<0&&d(t.next,e,e.next)<0}function Ie(e,t,n,c){var r=e;do r.z===null&&(r.z=ue(r.x,r.y,t,n,c)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==e);r.prevZ.nextZ=null,r.prevZ=null,He(r)}function He(e){var t,n,c,r,i,s,o,l,a=1;do{for(n=e,e=null,i=null,s=0;n;){for(s++,c=n,o=0,t=0;t<a&&(o++,c=c.nextZ,!!c);t++);for(l=a;o>0||l>0&&c;)o!==0&&(l===0||!c||n.z<=c.z)?(r=n,n=n.nextZ,o--):(r=c,c=c.nextZ,l--),i?i.nextZ=r:e=r,r.prevZ=i,i=r;n=c}i.nextZ=null,a*=2}while(s>1);return e}function ue(e,t,n,c,r){return e=32767*(e-n)*r,t=32767*(t-c)*r,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,e|t<<1}function _e(e){var t=e,n=e;do(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next;while(t!==e);return n}function H(e,t,n,c,r,i,s,o){return(r-s)*(t-o)-(e-s)*(i-o)>=0&&(e-s)*(c-o)-(n-s)*(t-o)>=0&&(n-s)*(i-o)-(r-s)*(c-o)>=0}function Ue(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!Re(e,t)&&(Q(e,t)&&Q(t,e)&&Ke(e,t)&&(d(e.prev,e,t.prev)||d(e,t.prev,t))||te(e,t)&&d(e.prev,e,e.next)>0&&d(t.prev,t,t.next)>0)}function d(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function te(e,t){return e.x===t.x&&e.y===t.y}function Ce(e,t,n,c){var r=ie(d(e,t,n)),i=ie(d(e,t,c)),s=ie(d(n,c,e)),o=ie(d(n,c,t));return!!(r!==i&&s!==o||r===0&&re(e,n,t)||i===0&&re(e,c,t)||s===0&&re(n,e,c)||o===0&&re(n,t,c))}function re(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function ie(e){return e>0?1:e<0?-1:0}function Re(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&Ce(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}function Q(e,t){return d(e.prev,e,e.next)<0?d(e,t,e.next)>=0&&d(e,e.prev,t)>=0:d(e,t,e.prev)<0||d(e,e.next,t)<0}function Ke(e,t){var n=e,c=!1,r=(e.x+t.x)/2,i=(e.y+t.y)/2;do n.y>i!=n.next.y>i&&n.next.y!==n.y&&r<(n.next.x-n.x)*(i-n.y)/(n.next.y-n.y)+n.x&&(c=!c),n=n.next;while(n!==e);return c}function de(e,t){var n=new ae(e.i,e.x,e.y),c=new ae(t.i,t.x,t.y),r=e.next,i=t.prev;return e.next=t,t.prev=e,n.next=r,r.prev=n,c.next=n,n.prev=c,i.next=c,c.prev=i,c}function ge(e,t,n,c){var r=new ae(e,t,n);return c?(r.next=c.next,r.prev=c,c.next.prev=r,c.next=r):(r.prev=r,r.next=r),r}function j(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function ae(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}ne.deviation=function(e,t,n,c){var r=t&&t.length,i=r?t[0]*n:e.length,s=Math.abs(fe(e,0,i,n));if(r)for(var o=0,l=t.length;o<l;o++){var a=t[o]*n,x=o<l-1?t[o+1]*n:e.length;s-=Math.abs(fe(e,a,x,n))}var p=0;for(o=0;o<c.length;o+=3){var C=c[o]*n,h=c[o+1]*n,f=c[o+2]*n;p+=Math.abs((e[C]-e[f])*(e[h+1]-e[C+1])-(e[C]-e[h])*(e[f+1]-e[C+1]))}return s===0&&p===0?0:Math.abs((p-s)/s)};function fe(e,t,n,c){for(var r=0,i=t,s=n-c;i<n;i+=c)r+=(e[s]-e[i])*(e[i+1]+e[s+1]),s=i;return r}ne.flatten=function(e){for(var t=e[0][0].length,n={vertices:[],holes:[],dimensions:t},c=0,r=0;r<e.length;r++){for(var i=0;i<e[r].length;i++)for(var s=0;s<t;s++)n.vertices.push(e[r][i][s]);r>0&&(c+=e[r-1].length,n.holes.push(c))}return n},ye.default=ke;const se={CLOCKWISE:ve.WebGLConstants.CW,COUNTER_CLOCKWISE:ve.WebGLConstants.CCW};se.validate=function(e){return e===se.CLOCKWISE||e===se.COUNTER_CLOCKWISE};var he=Object.freeze(se);const Ne=new u.Cartesian3,qe=new u.Cartesian3,D={};D.computeArea2D=function(e){T.Check.defined("positions",e),T.Check.typeOf.number.greaterThanOrEquals("positions.length",e.length,3);const t=e.length;let n=0;for(let c=t-1,r=0;r<t;c=r++){const i=e[c],s=e[r];n+=i.x*s.y-s.x*i.y}return n*.5},D.computeWindingOrder2D=function(e){return D.computeArea2D(e)>0?he.COUNTER_CLOCKWISE:he.CLOCKWISE},D.triangulate=function(e,t){T.Check.defined("positions",e);const n=u.Cartesian2.packArray(e);return ye(n,t,2)};const me=new u.Cartesian3,we=new u.Cartesian3,Se=new u.Cartesian3,Te=new u.Cartesian3,Ae=new u.Cartesian3,Oe=new u.Cartesian3,k=new u.Cartesian3,be=new u.Cartesian2,Ze=new u.Cartesian2,Le=new u.Cartesian2,_=new u.Cartesian2;D.computeSubdivision=function(e,t,n,c,r){r=b.defaultValue(r,F.CesiumMath.RADIANS_PER_DEGREE);const i=b.defined(c);T.Check.typeOf.object("ellipsoid",e),T.Check.defined("positions",t),T.Check.defined("indices",n),T.Check.typeOf.number.greaterThanOrEquals("indices.length",n.length,3),T.Check.typeOf.number.equals("indices.length % 3","0",n.length%3,0),T.Check.typeOf.number.greaterThan("granularity",r,0);const s=n.slice(0);let o;const l=t.length,a=new Array(l*3),x=new Array(l*2);let p=0,C=0;for(o=0;o<l;o++){const m=t[o];if(a[p++]=m.x,a[p++]=m.y,a[p++]=m.z,i){const S=c[o];x[C++]=S.x,x[C++]=S.y}}const h=[],f={},U=e.maximumRadius,ce=F.CesiumMath.chordLength(r,U),X=ce*ce;for(;s.length>0;){const m=s.pop(),S=s.pop(),v=s.pop(),w=u.Cartesian3.fromArray(a,v*3,me),A=u.Cartesian3.fromArray(a,S*3,we),Y=u.Cartesian3.fromArray(a,m*3,Se);let V,M,B;i&&(V=u.Cartesian2.fromArray(x,v*2,be),M=u.Cartesian2.fromArray(x,S*2,Ze),B=u.Cartesian2.fromArray(x,m*2,Le));const K=u.Cartesian3.multiplyByScalar(u.Cartesian3.normalize(w,Te),U,Te),N=u.Cartesian3.multiplyByScalar(u.Cartesian3.normalize(A,Ae),U,Ae),W=u.Cartesian3.multiplyByScalar(u.Cartesian3.normalize(Y,Oe),U,Oe),$=u.Cartesian3.magnitudeSquared(u.Cartesian3.subtract(K,N,k)),G=u.Cartesian3.magnitudeSquared(u.Cartesian3.subtract(N,W,k)),ee=u.Cartesian3.magnitudeSquared(u.Cartesian3.subtract(W,K,k)),I=Math.max($,G,ee);let Z,g,y;I>X?$===I?(Z=`${Math.min(v,S)} ${Math.max(v,S)}`,o=f[Z],b.defined(o)||(g=u.Cartesian3.add(w,A,k),u.Cartesian3.multiplyByScalar(g,.5,g),a.push(g.x,g.y,g.z),o=a.length/3-1,f[Z]=o,i&&(y=u.Cartesian2.add(V,M,_),u.Cartesian2.multiplyByScalar(y,.5,y),x.push(y.x,y.y))),s.push(v,o,m),s.push(o,S,m)):G===I?(Z=`${Math.min(S,m)} ${Math.max(S,m)}`,o=f[Z],b.defined(o)||(g=u.Cartesian3.add(A,Y,k),u.Cartesian3.multiplyByScalar(g,.5,g),a.push(g.x,g.y,g.z),o=a.length/3-1,f[Z]=o,i&&(y=u.Cartesian2.add(M,B,_),u.Cartesian2.multiplyByScalar(y,.5,y),x.push(y.x,y.y))),s.push(S,o,v),s.push(o,m,v)):ee===I&&(Z=`${Math.min(m,v)} ${Math.max(m,v)}`,o=f[Z],b.defined(o)||(g=u.Cartesian3.add(Y,w,k),u.Cartesian3.multiplyByScalar(g,.5,g),a.push(g.x,g.y,g.z),o=a.length/3-1,f[Z]=o,i&&(y=u.Cartesian2.add(B,V,_),u.Cartesian2.multiplyByScalar(y,.5,y),x.push(y.x,y.y))),s.push(m,o,S),s.push(o,v,S)):(h.push(v),h.push(S),h.push(m))}const R={attributes:{position:new E.GeometryAttribute({componentDatatype:F.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:a})},indices:h,primitiveType:E.PrimitiveType.TRIANGLES};return i&&(R.attributes.st=new E.GeometryAttribute({componentDatatype:F.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:x})),new E.Geometry(R)};const Je=new u.Cartographic,Qe=new u.Cartographic,je=new u.Cartographic,le=new u.Cartographic;D.computeRhumbLineSubdivision=function(e,t,n,c,r){r=b.defaultValue(r,F.CesiumMath.RADIANS_PER_DEGREE);const i=b.defined(c);T.Check.typeOf.object("ellipsoid",e),T.Check.defined("positions",t),T.Check.defined("indices",n),T.Check.typeOf.number.greaterThanOrEquals("indices.length",n.length,3),T.Check.typeOf.number.equals("indices.length % 3","0",n.length%3,0),T.Check.typeOf.number.greaterThan("granularity",r,0);const s=n.slice(0);let o;const l=t.length,a=new Array(l*3),x=new Array(l*2);let p=0,C=0;for(o=0;o<l;o++){const v=t[o];if(a[p++]=v.x,a[p++]=v.y,a[p++]=v.z,i){const w=c[o];x[C++]=w.x,x[C++]=w.y}}const h=[],f={},U=e.maximumRadius,ce=F.CesiumMath.chordLength(r,U),X=new oe.EllipsoidRhumbLine(void 0,void 0,e),R=new oe.EllipsoidRhumbLine(void 0,void 0,e),m=new oe.EllipsoidRhumbLine(void 0,void 0,e);for(;s.length>0;){const v=s.pop(),w=s.pop(),A=s.pop(),Y=u.Cartesian3.fromArray(a,A*3,me),V=u.Cartesian3.fromArray(a,w*3,we),M=u.Cartesian3.fromArray(a,v*3,Se);let B,K,N;i&&(B=u.Cartesian2.fromArray(x,A*2,be),K=u.Cartesian2.fromArray(x,w*2,Ze),N=u.Cartesian2.fromArray(x,v*2,Le));const W=e.cartesianToCartographic(Y,Je),$=e.cartesianToCartographic(V,Qe),G=e.cartesianToCartographic(M,je);X.setEndPoints(W,$);const ee=X.surfaceDistance;R.setEndPoints($,G);const I=R.surfaceDistance;m.setEndPoints(G,W);const Z=m.surfaceDistance,g=Math.max(ee,I,Z);let y,P,q,L,O;g>ce?ee===g?(y=`${Math.min(A,w)} ${Math.max(A,w)}`,o=f[y],b.defined(o)||(P=X.interpolateUsingFraction(.5,le),q=(W.height+$.height)*.5,L=u.Cartesian3.fromRadians(P.longitude,P.latitude,q,e,k),a.push(L.x,L.y,L.z),o=a.length/3-1,f[y]=o,i&&(O=u.Cartesian2.add(B,K,_),u.Cartesian2.multiplyByScalar(O,.5,O),x.push(O.x,O.y))),s.push(A,o,v),s.push(o,w,v)):I===g?(y=`${Math.min(w,v)} ${Math.max(w,v)}`,o=f[y],b.defined(o)||(P=R.interpolateUsingFraction(.5,le),q=($.height+G.height)*.5,L=u.Cartesian3.fromRadians(P.longitude,P.latitude,q,e,k),a.push(L.x,L.y,L.z),o=a.length/3-1,f[y]=o,i&&(O=u.Cartesian2.add(K,N,_),u.Cartesian2.multiplyByScalar(O,.5,O),x.push(O.x,O.y))),s.push(w,o,A),s.push(o,v,A)):Z===g&&(y=`${Math.min(v,A)} ${Math.max(v,A)}`,o=f[y],b.defined(o)||(P=m.interpolateUsingFraction(.5,le),q=(G.height+W.height)*.5,L=u.Cartesian3.fromRadians(P.longitude,P.latitude,q,e,k),a.push(L.x,L.y,L.z),o=a.length/3-1,f[y]=o,i&&(O=u.Cartesian2.add(N,B,_),u.Cartesian2.multiplyByScalar(O,.5,O),x.push(O.x,O.y))),s.push(v,o,w),s.push(o,A,w)):(h.push(A),h.push(w),h.push(v))}const S={attributes:{position:new E.GeometryAttribute({componentDatatype:F.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:a})},indices:h,primitiveType:E.PrimitiveType.TRIANGLES};return i&&(S.attributes.st=new E.GeometryAttribute({componentDatatype:F.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:x})),new E.Geometry(S)},D.scaleToGeodeticHeight=function(e,t,n,c){n=b.defaultValue(n,u.Ellipsoid.WGS84);let r=Ne,i=qe;if(t=b.defaultValue(t,0),c=b.defaultValue(c,!0),b.defined(e)){const s=e.length;for(let o=0;o<s;o+=3)u.Cartesian3.fromArray(e,o,i),c&&(i=n.scaleToGeodeticSurface(i,i)),t!==0&&(r=n.geodeticSurfaceNormal(i,r),u.Cartesian3.multiplyByScalar(r,t,r),u.Cartesian3.add(i,r,i)),e[o]=i.x,e[o+1]=i.y,e[o+2]=i.z}return e},xe.PolygonPipeline=D,xe.WindingOrder=he});
