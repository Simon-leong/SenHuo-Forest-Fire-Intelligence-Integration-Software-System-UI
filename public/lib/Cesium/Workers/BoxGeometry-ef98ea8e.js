/**
 * @license
 * Cesium - https://github.com/CesiumGS/cesium
 * Version 1.96.6
 *
 * Copyright 2011-2022 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/CesiumGS/cesium/blob/main/LICENSE.md for full licensing details.
 */

define(["exports","./Transforms-66eda18c","./Matrix2-4706dd70","./RuntimeError-a977b8e0","./ComponentDatatype-438cad2a","./defaultValue-028a8a27","./GeometryAttribute-2cdece80","./GeometryAttributes-98e858da","./GeometryOffsetAttribute-116f8293","./VertexFormat-3518f543"],function(w,O,s,f,A,r,y,k,C,p){"use strict";const l=new s.Cartesian3;function c(i){i=r.defaultValue(i,r.defaultValue.EMPTY_OBJECT);const a=i.minimum,o=i.maximum;if(f.Check.typeOf.object("min",a),f.Check.typeOf.object("max",o),r.defined(i.offsetAttribute)&&i.offsetAttribute===C.GeometryOffsetAttribute.TOP)throw new f.DeveloperError("GeometryOffsetAttribute.TOP is not a supported options.offsetAttribute for this geometry.");const m=r.defaultValue(i.vertexFormat,p.VertexFormat.DEFAULT);this._minimum=s.Cartesian3.clone(a),this._maximum=s.Cartesian3.clone(o),this._vertexFormat=m,this._offsetAttribute=i.offsetAttribute,this._workerName="createBoxGeometry"}c.fromDimensions=function(i){i=r.defaultValue(i,r.defaultValue.EMPTY_OBJECT);const a=i.dimensions;f.Check.typeOf.object("dimensions",a),f.Check.typeOf.number.greaterThanOrEquals("dimensions.x",a.x,0),f.Check.typeOf.number.greaterThanOrEquals("dimensions.y",a.y,0),f.Check.typeOf.number.greaterThanOrEquals("dimensions.z",a.z,0);const o=s.Cartesian3.multiplyByScalar(a,.5,new s.Cartesian3);return new c({minimum:s.Cartesian3.negate(o,new s.Cartesian3),maximum:o,vertexFormat:i.vertexFormat,offsetAttribute:i.offsetAttribute})},c.fromAxisAlignedBoundingBox=function(i){return f.Check.typeOf.object("boundingBox",i),new c({minimum:i.minimum,maximum:i.maximum})},c.packedLength=2*s.Cartesian3.packedLength+p.VertexFormat.packedLength+1,c.pack=function(i,a,o){return f.Check.typeOf.object("value",i),f.Check.defined("array",a),o=r.defaultValue(o,0),s.Cartesian3.pack(i._minimum,a,o),s.Cartesian3.pack(i._maximum,a,o+s.Cartesian3.packedLength),p.VertexFormat.pack(i._vertexFormat,a,o+2*s.Cartesian3.packedLength),a[o+2*s.Cartesian3.packedLength+p.VertexFormat.packedLength]=r.defaultValue(i._offsetAttribute,-1),a};const h=new s.Cartesian3,b=new s.Cartesian3,z=new p.VertexFormat,x={minimum:h,maximum:b,vertexFormat:z,offsetAttribute:void 0};c.unpack=function(i,a,o){f.Check.defined("array",i),a=r.defaultValue(a,0);const m=s.Cartesian3.unpack(i,a,h),u=s.Cartesian3.unpack(i,a+s.Cartesian3.packedLength,b),n=p.VertexFormat.unpack(i,a+2*s.Cartesian3.packedLength,z),t=i[a+2*s.Cartesian3.packedLength+p.VertexFormat.packedLength];return r.defined(o)?(o._minimum=s.Cartesian3.clone(m,o._minimum),o._maximum=s.Cartesian3.clone(u,o._maximum),o._vertexFormat=p.VertexFormat.clone(n,o._vertexFormat),o._offsetAttribute=t===-1?void 0:t,o):(x.offsetAttribute=t===-1?void 0:t,new c(x))},c.createGeometry=function(i){const a=i._minimum,o=i._maximum,m=i._vertexFormat;if(s.Cartesian3.equals(a,o))return;const u=new k.GeometryAttributes;let n,t;if(m.position&&(m.st||m.normal||m.tangent||m.bitangent)){if(m.position&&(t=new Float64Array(6*4*3),t[0]=a.x,t[1]=a.y,t[2]=o.z,t[3]=o.x,t[4]=a.y,t[5]=o.z,t[6]=o.x,t[7]=o.y,t[8]=o.z,t[9]=a.x,t[10]=o.y,t[11]=o.z,t[12]=a.x,t[13]=a.y,t[14]=a.z,t[15]=o.x,t[16]=a.y,t[17]=a.z,t[18]=o.x,t[19]=o.y,t[20]=a.z,t[21]=a.x,t[22]=o.y,t[23]=a.z,t[24]=o.x,t[25]=a.y,t[26]=a.z,t[27]=o.x,t[28]=o.y,t[29]=a.z,t[30]=o.x,t[31]=o.y,t[32]=o.z,t[33]=o.x,t[34]=a.y,t[35]=o.z,t[36]=a.x,t[37]=a.y,t[38]=a.z,t[39]=a.x,t[40]=o.y,t[41]=a.z,t[42]=a.x,t[43]=o.y,t[44]=o.z,t[45]=a.x,t[46]=a.y,t[47]=o.z,t[48]=a.x,t[49]=o.y,t[50]=a.z,t[51]=o.x,t[52]=o.y,t[53]=a.z,t[54]=o.x,t[55]=o.y,t[56]=o.z,t[57]=a.x,t[58]=o.y,t[59]=o.z,t[60]=a.x,t[61]=a.y,t[62]=a.z,t[63]=o.x,t[64]=a.y,t[65]=a.z,t[66]=o.x,t[67]=a.y,t[68]=o.z,t[69]=a.x,t[70]=a.y,t[71]=o.z,u.position=new y.GeometryAttribute({componentDatatype:A.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:t})),m.normal){const e=new Float32Array(72);e[0]=0,e[1]=0,e[2]=1,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=1,e[9]=0,e[10]=0,e[11]=1,e[12]=0,e[13]=0,e[14]=-1,e[15]=0,e[16]=0,e[17]=-1,e[18]=0,e[19]=0,e[20]=-1,e[21]=0,e[22]=0,e[23]=-1,e[24]=1,e[25]=0,e[26]=0,e[27]=1,e[28]=0,e[29]=0,e[30]=1,e[31]=0,e[32]=0,e[33]=1,e[34]=0,e[35]=0,e[36]=-1,e[37]=0,e[38]=0,e[39]=-1,e[40]=0,e[41]=0,e[42]=-1,e[43]=0,e[44]=0,e[45]=-1,e[46]=0,e[47]=0,e[48]=0,e[49]=1,e[50]=0,e[51]=0,e[52]=1,e[53]=0,e[54]=0,e[55]=1,e[56]=0,e[57]=0,e[58]=1,e[59]=0,e[60]=0,e[61]=-1,e[62]=0,e[63]=0,e[64]=-1,e[65]=0,e[66]=0,e[67]=-1,e[68]=0,e[69]=0,e[70]=-1,e[71]=0,u.normal=new y.GeometryAttribute({componentDatatype:A.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:e})}if(m.st){const e=new Float32Array(48);e[0]=0,e[1]=0,e[2]=1,e[3]=0,e[4]=1,e[5]=1,e[6]=0,e[7]=1,e[8]=1,e[9]=0,e[10]=0,e[11]=0,e[12]=0,e[13]=1,e[14]=1,e[15]=1,e[16]=0,e[17]=0,e[18]=1,e[19]=0,e[20]=1,e[21]=1,e[22]=0,e[23]=1,e[24]=1,e[25]=0,e[26]=0,e[27]=0,e[28]=0,e[29]=1,e[30]=1,e[31]=1,e[32]=1,e[33]=0,e[34]=0,e[35]=0,e[36]=0,e[37]=1,e[38]=1,e[39]=1,e[40]=0,e[41]=0,e[42]=1,e[43]=0,e[44]=1,e[45]=1,e[46]=0,e[47]=1,u.st=new y.GeometryAttribute({componentDatatype:A.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:e})}if(m.tangent){const e=new Float32Array(72);e[0]=1,e[1]=0,e[2]=0,e[3]=1,e[4]=0,e[5]=0,e[6]=1,e[7]=0,e[8]=0,e[9]=1,e[10]=0,e[11]=0,e[12]=-1,e[13]=0,e[14]=0,e[15]=-1,e[16]=0,e[17]=0,e[18]=-1,e[19]=0,e[20]=0,e[21]=-1,e[22]=0,e[23]=0,e[24]=0,e[25]=1,e[26]=0,e[27]=0,e[28]=1,e[29]=0,e[30]=0,e[31]=1,e[32]=0,e[33]=0,e[34]=1,e[35]=0,e[36]=0,e[37]=-1,e[38]=0,e[39]=0,e[40]=-1,e[41]=0,e[42]=0,e[43]=-1,e[44]=0,e[45]=0,e[46]=-1,e[47]=0,e[48]=-1,e[49]=0,e[50]=0,e[51]=-1,e[52]=0,e[53]=0,e[54]=-1,e[55]=0,e[56]=0,e[57]=-1,e[58]=0,e[59]=0,e[60]=1,e[61]=0,e[62]=0,e[63]=1,e[64]=0,e[65]=0,e[66]=1,e[67]=0,e[68]=0,e[69]=1,e[70]=0,e[71]=0,u.tangent=new y.GeometryAttribute({componentDatatype:A.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:e})}if(m.bitangent){const e=new Float32Array(72);e[0]=0,e[1]=1,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=1,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=1,e[14]=0,e[15]=0,e[16]=1,e[17]=0,e[18]=0,e[19]=1,e[20]=0,e[21]=0,e[22]=1,e[23]=0,e[24]=0,e[25]=0,e[26]=1,e[27]=0,e[28]=0,e[29]=1,e[30]=0,e[31]=0,e[32]=1,e[33]=0,e[34]=0,e[35]=1,e[36]=0,e[37]=0,e[38]=1,e[39]=0,e[40]=0,e[41]=1,e[42]=0,e[43]=0,e[44]=1,e[45]=0,e[46]=0,e[47]=1,e[48]=0,e[49]=0,e[50]=1,e[51]=0,e[52]=0,e[53]=1,e[54]=0,e[55]=0,e[56]=1,e[57]=0,e[58]=0,e[59]=1,e[60]=0,e[61]=0,e[62]=1,e[63]=0,e[64]=0,e[65]=1,e[66]=0,e[67]=0,e[68]=1,e[69]=0,e[70]=0,e[71]=1,u.bitangent=new y.GeometryAttribute({componentDatatype:A.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:e})}n=new Uint16Array(6*2*3),n[0]=0,n[1]=1,n[2]=2,n[3]=0,n[4]=2,n[5]=3,n[6]=4+2,n[7]=4+1,n[8]=4+0,n[9]=4+3,n[10]=4+2,n[11]=4+0,n[12]=8+0,n[13]=8+1,n[14]=8+2,n[15]=8+0,n[16]=8+2,n[17]=8+3,n[18]=12+2,n[19]=12+1,n[20]=12+0,n[21]=12+3,n[22]=12+2,n[23]=12+0,n[24]=16+2,n[25]=16+1,n[26]=16+0,n[27]=16+3,n[28]=16+2,n[29]=16+0,n[30]=20+0,n[31]=20+1,n[32]=20+2,n[33]=20+0,n[34]=20+2,n[35]=20+3}else t=new Float64Array(8*3),t[0]=a.x,t[1]=a.y,t[2]=a.z,t[3]=o.x,t[4]=a.y,t[5]=a.z,t[6]=o.x,t[7]=o.y,t[8]=a.z,t[9]=a.x,t[10]=o.y,t[11]=a.z,t[12]=a.x,t[13]=a.y,t[14]=o.z,t[15]=o.x,t[16]=a.y,t[17]=o.z,t[18]=o.x,t[19]=o.y,t[20]=o.z,t[21]=a.x,t[22]=o.y,t[23]=o.z,u.position=new y.GeometryAttribute({componentDatatype:A.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:t}),n=new Uint16Array(6*2*3),n[0]=4,n[1]=5,n[2]=6,n[3]=4,n[4]=6,n[5]=7,n[6]=1,n[7]=0,n[8]=3,n[9]=1,n[10]=3,n[11]=2,n[12]=1,n[13]=6,n[14]=5,n[15]=1,n[16]=2,n[17]=6,n[18]=2,n[19]=3,n[20]=7,n[21]=2,n[22]=7,n[23]=6,n[24]=3,n[25]=0,n[26]=4,n[27]=3,n[28]=4,n[29]=7,n[30]=0,n[31]=1,n[32]=5,n[33]=0,n[34]=5,n[35]=4;const F=s.Cartesian3.subtract(o,a,l),_=s.Cartesian3.magnitude(F)*.5;if(r.defined(i._offsetAttribute)){const e=t.length,g=i._offsetAttribute===C.GeometryOffsetAttribute.NONE?0:1,v=new Uint8Array(e/3).fill(g);u.applyOffset=new y.GeometryAttribute({componentDatatype:A.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:v})}return new y.Geometry({attributes:u,indices:n,primitiveType:y.PrimitiveType.TRIANGLES,boundingSphere:new O.BoundingSphere(s.Cartesian3.ZERO,_),offsetAttribute:i._offsetAttribute})};let d;c.getUnitBox=function(){return r.defined(d)||(d=c.createGeometry(c.fromDimensions({dimensions:new s.Cartesian3(1,1,1),vertexFormat:p.VertexFormat.POSITION_ONLY}))),d},w.BoxGeometry=c});
